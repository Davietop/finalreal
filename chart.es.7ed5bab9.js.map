{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-9f5a010812faa746.js","node_modules/tw-elements/dist/js/chart.es.js","node_modules/tw-elements/node_modules/chart.js/dist/chunks/helpers.segment.mjs","node_modules/tw-elements/node_modules/chart.js/dist/chart.mjs","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"403723ef7ed5bab9\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}",null,"/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","type","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","toDimension","callback","fn","args","thisArg","each","loopable","reverse","i","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","clone$1","source","target","klen","k","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","keyResolvers","v","o","resolveObjectKey","obj","_getKeyResolver","_splitKey","parts","tmp","part","_capitalize","str","defined","isFunction","setsEqual","a","b","item","_isClickEvent","e","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","almostEquals","niceRange","fraction","_factorize","result","sqrt","isNumber","n","x","y","epsilon","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","min","max","_int16Range","_isBetween","_lookup","table","cmp","index","hi","lo","mid","_lookupByKey","last","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","updateFn","updateArgs","ticking","rest","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","iScale","_parsed","axis","minDefined","maxDefined","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","changed","atEdge","t","elasticIn","elasticOut","effects","round","lim","l","h","p2b","n2b","b2n","n2p","map$1","hex","h1","h2","eq","isShort","hexParse","ret","alpha","f","hexString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","r","g","d","rgb2hsl","calln","c","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","tkeys","j","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","modHSL","ratio","clone","proto","fromObject","input","functionParse","Color","color","weight","c1","c2","w2","w1","val","index_esm","isPatternOrGradient","getHoverColor","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","context","ctx","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","defaults","toFontString","font","_measureText","data","gc","longest","string","textWidth","_longestText","arrayOfThings","cache","jlen","thing","nestedThing","gcLen","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","size","cornerRadius","style","rotation","radius","rad","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","renderText","text","opts","lines","stroke","line","setRenderOpts","decorateText","metrics","top","bottom","yDecoration","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","parsed","EPSILON","getPoint","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","evt","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","spanGaps","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","st","dir","styleChanged","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","event","cb","acc","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","remain","duration","promises","rej","resolved","numbers","colors","animationOptions","Animations","config","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","scale","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","updateStacks","controller","iAxis","vAxis","itemStacks","getFirstScaleId","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","computeFlexCategoryTraits","pixels","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","reset","horizontal","vpixels","ipixels","dataIndex","skipNull","barThickness","baseValue","minBarLength","floating","length","head","startPixel","endPixel","halfGrid","maxBarThickness","center","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","getter","chartArea","arcs","spacing","maxSize","chartWeight","maxRadius","outerRadius","innerRadius","radiusLength","animationOpts","centerX","centerY","animateScale","arc","metaData","total","ringWeightOffset","pointStyle","label","legendItem","legend","tooltipItem","dataLabel","LineController","_dataset","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","PolarAreaController","minSize","datasetStartAngle","defaultAngle","PieController","RadarController","pointPosition","Element","useFinalPosition","final","formatters","tickValue","ticks","notation","maxTick","calculateDelta","logDelta","numDecimal","Ticks","_ctx","autoSkip","tickOpts","ticksLimit","determineMaxTicks","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","getTickMarkLength","getTitleHeight","padding","createScaleContext","createTickContext","tick","titleAlign","position","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","title","tz","gz","axisID","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","ScatterController","showLine","controllers","abstract","DateAdapter","chartOptions","format","timestamp","amount","unit","weekday","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","includeInvisible","getNearestRadialItems","evaluationFunc","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","clip","useClip","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","replay","hoverOptions","deactivated","activated","eventFilter","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","drawBorder","borderWidth","borderJoinStyle","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","refRect","BarElement","borderColor","outer","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","xAxis","threshold","_segments","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_loop","_shouldApplyFill","_resolveTarget","propagate","fill","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","_args","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtlHelper","hitbox","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","drawOptions","yBoxTop","xBoxLeft","borderRadius","fillText","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","plugin_legend","ci","usePointStyle","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","plugin_subtitle","positioners","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","labelCount","addIfString","addedLabels","findOrAddLabel","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","maxTicksLimit","stepSize","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","pointLabelOpts","additionalAngle","plFont","hLimits","vLimits","updateLimits","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pointLabels","backdropColor","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","angleLines","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","hasWeekday","formats","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","registerables"],"version":3,"file":"chart.es.7ed5bab9.js.map","sourceRoot":"/__parcel_source_root/"}